<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="97">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="CMakeFiles">
        <df name="3.5.1">
          <df name="CompilerIdC">
            <in>CMakeCCompilerId.c</in>
          </df>
          <df name="CompilerIdCXX">
            <in>CMakeCXXCompilerId.cpp</in>
          </df>
        </df>
        <df name="CMakeTmp">
        </df>
        <in>feature_tests.c</in>
        <in>feature_tests.cxx</in>
      </df>
      <df name="external">
        <df name="CMakeFiles">
        </df>
        <df name="google">
          <df name="sparsehash">
            <in>densehashtable.h</in>
            <in>hashtable-common.h</in>
            <in>libc_allocator_with_realloc.h</in>
            <in>os_config.h</in>
            <in>sparseconfig.h</in>
            <in>sparseconfig_win.h</in>
            <in>sparsehashtable.h</in>
          </df>
          <in>type_traits.h</in>
        </df>
        <df name="gtest">
          <df name="build-aux">
          </df>
          <df name="cmake">
          </df>
          <df name="CMakeFiles">
          </df>
          <df name="codegear">
            <in>gtest_all.cc</in>
            <in>gtest_link.cc</in>
          </df>
          <df name="fused-src">
            <df name="gtest">
              <in>gtest-all.cc</in>
              <in>gtest.h</in>
              <in>gtest_main.cc</in>
            </df>
          </df>
          <df name="include">
            <df name="gtest">
              <df name="internal">
                <in>gtest-death-test-internal.h</in>
                <in>gtest-filepath.h</in>
                <in>gtest-internal.h</in>
                <in>gtest-linked_ptr.h</in>
                <in>gtest-param-util-generated.h</in>
                <in>gtest-param-util.h</in>
                <in>gtest-port.h</in>
                <in>gtest-string.h</in>
                <in>gtest-tuple.h</in>
                <in>gtest-type-util.h</in>
              </df>
              <in>gtest-death-test.h</in>
              <in>gtest-message.h</in>
              <in>gtest-param-test.h</in>
              <in>gtest-printers.h</in>
              <in>gtest-spi.h</in>
              <in>gtest-test-part.h</in>
              <in>gtest-typed-test.h</in>
              <in>gtest.h</in>
              <in>gtest_pred_impl.h</in>
              <in>gtest_prod.h</in>
            </df>
          </df>
          <df name="m4">
          </df>
          <df name="make">
          </df>
          <df name="msvc">
          </df>
          <df name="samples">
            <in>prime_tables.h</in>
            <in>sample1.cc</in>
            <in>sample1.h</in>
            <in>sample10_unittest.cc</in>
            <in>sample1_unittest.cc</in>
            <in>sample2.cc</in>
            <in>sample2.h</in>
            <in>sample2_unittest.cc</in>
            <in>sample3-inl.h</in>
            <in>sample3_unittest.cc</in>
            <in>sample4.cc</in>
            <in>sample4.h</in>
            <in>sample4_unittest.cc</in>
            <in>sample5_unittest.cc</in>
            <in>sample6_unittest.cc</in>
            <in>sample7_unittest.cc</in>
            <in>sample8_unittest.cc</in>
            <in>sample9_unittest.cc</in>
          </df>
          <df name="scripts">
            <df name="test">
            </df>
          </df>
          <df name="src">
            <in>gtest-all.cc</in>
            <in>gtest-death-test.cc</in>
            <in>gtest-filepath.cc</in>
            <in>gtest-internal-inl.h</in>
            <in>gtest-port.cc</in>
            <in>gtest-printers.cc</in>
            <in>gtest-test-part.cc</in>
            <in>gtest-typed-test.cc</in>
            <in>gtest.cc</in>
            <in>gtest_main.cc</in>
          </df>
          <df name="test">
            <in>gtest-death-test_ex_test.cc</in>
            <in>gtest-death-test_test.cc</in>
            <in>gtest-filepath_test.cc</in>
            <in>gtest-linked_ptr_test.cc</in>
            <in>gtest-listener_test.cc</in>
            <in>gtest-message_test.cc</in>
            <in>gtest-options_test.cc</in>
            <in>gtest-param-test2_test.cc</in>
            <in>gtest-param-test_test.cc</in>
            <in>gtest-param-test_test.h</in>
            <in>gtest-port_test.cc</in>
            <in>gtest-printers_test.cc</in>
            <in>gtest-test-part_test.cc</in>
            <in>gtest-tuple_test.cc</in>
            <in>gtest-typed-test2_test.cc</in>
            <in>gtest-typed-test_test.cc</in>
            <in>gtest-typed-test_test.h</in>
            <in>gtest-unittest-api_test.cc</in>
            <in>gtest_all_test.cc</in>
            <in>gtest_break_on_failure_unittest_.cc</in>
            <in>gtest_catch_exceptions_test_.cc</in>
            <in>gtest_color_test_.cc</in>
            <in>gtest_env_var_test_.cc</in>
            <in>gtest_environment_test.cc</in>
            <in>gtest_filter_unittest_.cc</in>
            <in>gtest_help_test_.cc</in>
            <in>gtest_list_tests_unittest_.cc</in>
            <in>gtest_main_unittest.cc</in>
            <in>gtest_no_test_unittest.cc</in>
            <in>gtest_output_test_.cc</in>
            <in>gtest_pred_impl_unittest.cc</in>
            <in>gtest_premature_exit_test.cc</in>
            <in>gtest_prod_test.cc</in>
            <in>gtest_repeat_test.cc</in>
            <in>gtest_shuffle_test_.cc</in>
            <in>gtest_sole_header_test.cc</in>
            <in>gtest_stress_test.cc</in>
            <in>gtest_throw_on_failure_ex_test.cc</in>
            <in>gtest_throw_on_failure_test_.cc</in>
            <in>gtest_uninitialized_test_.cc</in>
            <in>gtest_unittest.cc</in>
            <in>gtest_xml_outfile1_test_.cc</in>
            <in>gtest_xml_outfile2_test_.cc</in>
            <in>gtest_xml_output_unittest_.cc</in>
            <in>production.cc</in>
            <in>production.h</in>
          </df>
          <df name="xcode">
            <df name="Config">
            </df>
            <df name="gtest.xcodeproj">
            </df>
            <df name="Resources">
            </df>
            <df name="Samples">
              <df name="FrameworkSample">
                <df name="WidgetFramework.xcodeproj">
                </df>
                <in>widget.cc</in>
                <in>widget.h</in>
                <in>widget_test.cc</in>
              </df>
            </df>
            <df name="Scripts">
            </df>
          </df>
        </df>
        <df name="miniupnpc">
          <df name="CMakeFiles">
          </df>
          <df name="java">
          </df>
          <df name="man3">
          </df>
          <df name="msvc">
          </df>
          <df name="testreplyparse">
          </df>
          <in>bsdqueue.h</in>
          <in>codelength.h</in>
          <in>connecthostport.c</in>
          <in>connecthostport.h</in>
          <in>declspec.h</in>
          <in>igd_desc_parse.c</in>
          <in>igd_desc_parse.h</in>
          <in>minihttptestserver.c</in>
          <in>minisoap.c</in>
          <in>minisoap.h</in>
          <in>minissdpc.c</in>
          <in>minissdpc.h</in>
          <in>miniupnpc.c</in>
          <in>miniupnpc.h</in>
          <in>miniupnpcmodule.c</in>
          <in>miniupnpctypes.h</in>
          <in>miniwget.c</in>
          <in>miniwget.h</in>
          <in>minixml.c</in>
          <in>minixml.h</in>
          <in>minixmlvalid.c</in>
          <in>portlistingparse.c</in>
          <in>portlistingparse.h</in>
          <in>receivedata.c</in>
          <in>receivedata.h</in>
          <in>testigddescparse.c</in>
          <in>testminiwget.c</in>
          <in>testminixml.c</in>
          <in>testupnpreplyparse.c</in>
          <in>upnpc.c</in>
          <in>upnpcommands.c</in>
          <in>upnpcommands.h</in>
          <in>upnperrors.c</in>
          <in>upnperrors.h</in>
          <in>upnpreplyparse.c</in>
          <in>upnpreplyparse.h</in>
          <in>wingenminiupnpcstrings.c</in>
        </df>
      </df>
      <df name="include">
        <in>BlockchainExplorerData.h</in>
        <in>CryptoNote.h</in>
        <in>CryptoTypes.h</in>
        <in>IBlockchainExplorer.h</in>
        <in>INode.h</in>
        <in>IObservable.h</in>
        <in>IStreamSerializable.h</in>
        <in>ITransaction.h</in>
        <in>ITransfersContainer.h</in>
        <in>ITransfersSynchronizer.h</in>
        <in>IWallet.h</in>
        <in>IWalletLegacy.h</in>
      </df>
      <df name="src">
        <df name="BlockchainExplorer">
          <in>BlockchainExplorer.cpp</in>
          <in>BlockchainExplorer.h</in>
          <in>BlockchainExplorerDataBuilder.cpp</in>
          <in>BlockchainExplorerDataBuilder.h</in>
          <in>BlockchainExplorerErrors.cpp</in>
          <in>BlockchainExplorerErrors.h</in>
        </df>
        <df name="CMakeFiles">
        </df>
        <df name="Common">
          <in>ArrayRef.h</in>
          <in>ArrayView.h</in>
          <in>Base58.cpp</in>
          <in>Base58.h</in>
          <in>BlockingQueue.cpp</in>
          <in>BlockingQueue.h</in>
          <in>CommandLine.cpp</in>
          <in>CommandLine.h</in>
          <in>ConsoleHandler.cpp</in>
          <in>ConsoleHandler.h</in>
          <in>ConsoleTools.cpp</in>
          <in>ConsoleTools.h</in>
          <in>IInputStream.cpp</in>
          <in>IInputStream.h</in>
          <in>IOutputStream.cpp</in>
          <in>IOutputStream.h</in>
          <in>JsonValue.cpp</in>
          <in>JsonValue.h</in>
          <in>Math.cpp</in>
          <in>Math.h</in>
          <in>MemoryInputStream.cpp</in>
          <in>MemoryInputStream.h</in>
          <in>ObserverManager.h</in>
          <in>PathTools.cpp</in>
          <in>PathTools.h</in>
          <in>ScopeExit.cpp</in>
          <in>ScopeExit.h</in>
          <in>ShuffleGenerator.h</in>
          <in>SignalHandler.cpp</in>
          <in>SignalHandler.h</in>
          <in>StdInputStream.cpp</in>
          <in>StdInputStream.h</in>
          <in>StdOutputStream.cpp</in>
          <in>StdOutputStream.h</in>
          <in>StreamTools.cpp</in>
          <in>StreamTools.h</in>
          <in>StringBuffer.h</in>
          <in>StringInputStream.cpp</in>
          <in>StringInputStream.h</in>
          <in>StringOutputStream.cpp</in>
          <in>StringOutputStream.h</in>
          <in>StringTools.cpp</in>
          <in>StringTools.h</in>
          <in>StringView.cpp</in>
          <in>StringView.h</in>
          <in>Util.cpp</in>
          <in>Util.h</in>
          <in>Varint.h</in>
          <in>VectorOutputStream.cpp</in>
          <in>VectorOutputStream.h</in>
          <in>int-util.h</in>
          <in>pod-class.h</in>
          <in>static_assert.h</in>
        </df>
        <df name="ConnectivityTool">
          <in>ConnectivityTool.cpp</in>
        </df>
        <df name="crypto">
          <in>aesb.h</in>
          <in>blake256.c</in>
          <in>blake256.h</in>
          <in>chacha8.c</in>
          <in>chacha8.h</in>
          <in>crypto-ops-data.c</in>
          <in>crypto-ops.c</in>
          <in>crypto-ops.h</in>
          <in>crypto.cpp</in>
          <in>crypto.h</in>
          <in>generic-ops.h</in>
          <in>groestl.c</in>
          <in>groestl.h</in>
          <in>groestl_tables.h</in>
          <in>hash-extra-blake.c</in>
          <in>hash-extra-groestl.c</in>
          <in>hash-extra-jh.c</in>
          <in>hash-extra-skein.c</in>
          <in>hash-ops.h</in>
          <in>hash.c</in>
          <in>hash.h</in>
          <in>initializer.h</in>
          <in>jh.c</in>
          <in>jh.h</in>
          <in>keccak.c</in>
          <in>keccak.h</in>
          <in>oaes_config.h</in>
          <in>oaes_lib.c</in>
          <in>oaes_lib.h</in>
          <in>random.c</in>
          <in>random.h</in>
          <in>skein.c</in>
          <in>skein.h</in>
          <in>skein_port.h</in>
          <in>slow-hash.c</in>
          <in>slow-hash.cpp</in>
          <in>slow-hash.inl</in>
          <in>tree-hash.c</in>
        </df>
        <df name="CryptoNoteCore">
          <in>Account.cpp</in>
          <in>Account.h</in>
          <in>BlockIndex.cpp</in>
          <in>BlockIndex.h</in>
          <in>Blockchain.cpp</in>
          <in>Blockchain.h</in>
          <in>BlockchainIndices.cpp</in>
          <in>BlockchainIndices.h</in>
          <in>BlockchainMessages.cpp</in>
          <in>BlockchainMessages.h</in>
          <in>Checkpoints.cpp</in>
          <in>Checkpoints.h</in>
          <in>Core.cpp</in>
          <in>Core.h</in>
          <in>CoreConfig.cpp</in>
          <in>CoreConfig.h</in>
          <in>CryptoNoteBasic.cpp</in>
          <in>CryptoNoteBasic.h</in>
          <in>CryptoNoteBasicImpl.cpp</in>
          <in>CryptoNoteBasicImpl.h</in>
          <in>CryptoNoteFormatUtils.cpp</in>
          <in>CryptoNoteFormatUtils.h</in>
          <in>CryptoNoteSerialization.cpp</in>
          <in>CryptoNoteSerialization.h</in>
          <in>CryptoNoteStatInfo.h</in>
          <in>CryptoNoteTools.cpp</in>
          <in>CryptoNoteTools.h</in>
          <in>Currency.cpp</in>
          <in>Currency.h</in>
          <in>Difficulty.cpp</in>
          <in>Difficulty.h</in>
          <in>IBlock.cpp</in>
          <in>IBlock.h</in>
          <in>IBlockchainStorageObserver.h</in>
          <in>ICore.h</in>
          <in>ICoreObserver.h</in>
          <in>IMinerHandler.h</in>
          <in>ITimeProvider.cpp</in>
          <in>ITimeProvider.h</in>
          <in>ITransactionValidator.h</in>
          <in>ITxPoolObserver.h</in>
          <in>IntrusiveLinkedList.h</in>
          <in>MessageQueue.h</in>
          <in>Miner.cpp</in>
          <in>Miner.h</in>
          <in>MinerConfig.cpp</in>
          <in>MinerConfig.h</in>
          <in>OnceInInterval.h</in>
          <in>SwappedMap.cpp</in>
          <in>SwappedMap.h</in>
          <in>SwappedVector.cpp</in>
          <in>SwappedVector.h</in>
          <in>Transaction.cpp</in>
          <in>TransactionApi.h</in>
          <in>TransactionApiExtra.h</in>
          <in>TransactionExtra.cpp</in>
          <in>TransactionExtra.h</in>
          <in>TransactionPool.cpp</in>
          <in>TransactionPool.h</in>
          <in>TransactionPrefixImpl.cpp</in>
          <in>TransactionUtils.cpp</in>
          <in>TransactionUtils.h</in>
          <in>VerificationContext.h</in>
        </df>
        <df name="CryptoNoteProtocol">
          <in>CryptoNoteProtocolDefinitions.h</in>
          <in>CryptoNoteProtocolHandler.cpp</in>
          <in>CryptoNoteProtocolHandler.h</in>
          <in>CryptoNoteProtocolHandlerCommon.h</in>
          <in>ICryptoNoteProtocolObserver.h</in>
          <in>ICryptoNoteProtocolQuery.h</in>
        </df>
        <df name="Daemon">
          <in>Daemon.cpp</in>
          <in>DaemonCommandsHandler.cpp</in>
          <in>DaemonCommandsHandler.h</in>
        </df>
        <df name="HTTP">
          <in>HttpParser.cpp</in>
          <in>HttpParser.h</in>
          <in>HttpParserErrorCodes.cpp</in>
          <in>HttpParserErrorCodes.h</in>
          <in>HttpRequest.cpp</in>
          <in>HttpRequest.h</in>
          <in>HttpResponse.cpp</in>
          <in>HttpResponse.h</in>
        </df>
        <df name="InProcessNode">
          <in>InProcessNode.cpp</in>
          <in>InProcessNode.h</in>
          <in>InProcessNodeErrors.cpp</in>
          <in>InProcessNodeErrors.h</in>
        </df>
        <df name="JsonRpcServer">
          <in>JsonRpcServer.cpp</in>
          <in>JsonRpcServer.h</in>
        </df>
        <df name="Logging">
          <in>CommonLogger.cpp</in>
          <in>CommonLogger.h</in>
          <in>ConsoleLogger.cpp</in>
          <in>ConsoleLogger.h</in>
          <in>FileLogger.cpp</in>
          <in>FileLogger.h</in>
          <in>ILogger.cpp</in>
          <in>ILogger.h</in>
          <in>LoggerGroup.cpp</in>
          <in>LoggerGroup.h</in>
          <in>LoggerManager.cpp</in>
          <in>LoggerManager.h</in>
          <in>LoggerMessage.cpp</in>
          <in>LoggerMessage.h</in>
          <in>LoggerRef.cpp</in>
          <in>LoggerRef.h</in>
          <in>StreamLogger.cpp</in>
          <in>StreamLogger.h</in>
        </df>
        <df name="Miner">
          <in>BlockchainMonitor.cpp</in>
          <in>BlockchainMonitor.h</in>
          <in>Miner.cpp</in>
          <in>Miner.h</in>
          <in>MinerEvent.h</in>
          <in>MinerManager.cpp</in>
          <in>MinerManager.h</in>
          <in>MiningConfig.cpp</in>
          <in>MiningConfig.h</in>
          <in>main.cpp</in>
        </df>
        <df name="NodeRpcProxy">
          <in>NodeErrors.cpp</in>
          <in>NodeErrors.h</in>
          <in>NodeRpcProxy.cpp</in>
          <in>NodeRpcProxy.h</in>
        </df>
        <df name="P2p">
          <in>ConnectionContext.h</in>
          <in>IP2pNodeInternal.cpp</in>
          <in>IP2pNodeInternal.h</in>
          <in>LevinProtocol.cpp</in>
          <in>LevinProtocol.h</in>
          <in>NetNode.cpp</in>
          <in>NetNode.h</in>
          <in>NetNodeCommon.h</in>
          <in>NetNodeConfig.cpp</in>
          <in>NetNodeConfig.h</in>
          <in>P2pConnectionProxy.cpp</in>
          <in>P2pConnectionProxy.h</in>
          <in>P2pContext.cpp</in>
          <in>P2pContext.h</in>
          <in>P2pContextOwner.cpp</in>
          <in>P2pContextOwner.h</in>
          <in>P2pInterfaces.cpp</in>
          <in>P2pInterfaces.h</in>
          <in>P2pNetworks.h</in>
          <in>P2pNode.cpp</in>
          <in>P2pNode.h</in>
          <in>P2pNodeConfig.cpp</in>
          <in>P2pNodeConfig.h</in>
          <in>P2pProtocolDefinitions.h</in>
          <in>P2pProtocolTypes.h</in>
          <in>PeerListManager.cpp</in>
          <in>PeerListManager.h</in>
        </df>
        <df name="PaymentGate">
          <in>NodeFactory.cpp</in>
          <in>NodeFactory.h</in>
          <in>PaymentServiceJsonRpcMessages.cpp</in>
          <in>PaymentServiceJsonRpcMessages.h</in>
          <in>PaymentServiceJsonRpcServer.cpp</in>
          <in>PaymentServiceJsonRpcServer.h</in>
          <in>WalletFactory.cpp</in>
          <in>WalletFactory.h</in>
          <in>WalletService.cpp</in>
          <in>WalletService.h</in>
          <in>WalletServiceErrorCategory.cpp</in>
          <in>WalletServiceErrorCategory.h</in>
        </df>
        <df name="PaymentGateService">
          <in>ConfigurationManager.cpp</in>
          <in>ConfigurationManager.h</in>
          <in>PaymentGateService.cpp</in>
          <in>PaymentGateService.h</in>
          <in>PaymentServiceConfiguration.cpp</in>
          <in>PaymentServiceConfiguration.h</in>
          <in>RpcNodeConfiguration.cpp</in>
          <in>RpcNodeConfiguration.h</in>
          <in>main.cpp</in>
        </df>
        <df name="Platform">
          <df name="Linux">
            <df name="System">
              <in>Dispatcher.cpp</in>
              <in>Dispatcher.h</in>
              <in>ErrorMessage.cpp</in>
              <in>ErrorMessage.h</in>
              <in>Future.h</in>
              <in>Ipv4Resolver.cpp</in>
              <in>Ipv4Resolver.h</in>
              <in>TcpConnection.cpp</in>
              <in>TcpConnection.h</in>
              <in>TcpConnector.cpp</in>
              <in>TcpConnector.h</in>
              <in>TcpListener.cpp</in>
              <in>TcpListener.h</in>
              <in>Timer.cpp</in>
              <in>Timer.h</in>
            </df>
          </df>
          <df name="mingw">
            <in>alloca.h</in>
          </df>
          <df name="msc">
            <df name="sys">
              <in>param.h</in>
            </df>
            <in>alloca.h</in>
            <in>stdbool.h</in>
          </df>
          <df name="OSX">
            <df name="System">
              <in>Context.c</in>
              <in>Context.h</in>
              <in>Dispatcher.cpp</in>
              <in>Dispatcher.h</in>
              <in>ErrorMessage.cpp</in>
              <in>ErrorMessage.h</in>
              <in>Future.h</in>
              <in>Ipv4Resolver.cpp</in>
              <in>Ipv4Resolver.h</in>
              <in>TcpConnection.cpp</in>
              <in>TcpConnection.h</in>
              <in>TcpConnector.cpp</in>
              <in>TcpConnector.h</in>
              <in>TcpListener.cpp</in>
              <in>TcpListener.h</in>
              <in>Timer.cpp</in>
              <in>Timer.h</in>
              <in>asm.s</in>
            </df>
          </df>
          <df name="Windows">
            <df name="System">
              <in>Dispatcher.cpp</in>
              <in>Dispatcher.h</in>
              <in>ErrorMessage.cpp</in>
              <in>ErrorMessage.h</in>
              <in>Future.h</in>
              <in>Ipv4Resolver.cpp</in>
              <in>Ipv4Resolver.h</in>
              <in>TcpConnection.cpp</in>
              <in>TcpConnection.h</in>
              <in>TcpConnector.cpp</in>
              <in>TcpConnector.h</in>
              <in>TcpListener.cpp</in>
              <in>TcpListener.h</in>
              <in>Timer.cpp</in>
              <in>Timer.h</in>
            </df>
          </df>
        </df>
        <df name="Rpc">
          <in>CoreRpcServerCommandsDefinitions.h</in>
          <in>CoreRpcServerErrorCodes.h</in>
          <in>HttpClient.cpp</in>
          <in>HttpClient.h</in>
          <in>HttpServer.cpp</in>
          <in>HttpServer.h</in>
          <in>JsonRpc.cpp</in>
          <in>JsonRpc.h</in>
          <in>RpcServer.cpp</in>
          <in>RpcServer.h</in>
          <in>RpcServerConfig.cpp</in>
          <in>RpcServerConfig.h</in>
        </df>
        <df name="Serialization">
          <in>BinaryInputStreamSerializer.cpp</in>
          <in>BinaryInputStreamSerializer.h</in>
          <in>BinaryOutputStreamSerializer.cpp</in>
          <in>BinaryOutputStreamSerializer.h</in>
          <in>BinarySerializationTools.h</in>
          <in>ISerializer.h</in>
          <in>IStream.h</in>
          <in>JsonInputStreamSerializer.cpp</in>
          <in>JsonInputStreamSerializer.h</in>
          <in>JsonInputValueSerializer.cpp</in>
          <in>JsonInputValueSerializer.h</in>
          <in>JsonOutputStreamSerializer.cpp</in>
          <in>JsonOutputStreamSerializer.h</in>
          <in>KVBinaryCommon.h</in>
          <in>KVBinaryInputStreamSerializer.cpp</in>
          <in>KVBinaryInputStreamSerializer.h</in>
          <in>KVBinaryOutputStreamSerializer.cpp</in>
          <in>KVBinaryOutputStreamSerializer.h</in>
          <in>MemoryStream.cpp</in>
          <in>MemoryStream.h</in>
          <in>SerializationOverloads.cpp</in>
          <in>SerializationOverloads.h</in>
          <in>SerializationTools.h</in>
        </df>
        <df name="SimpleWallet">
          <in>PasswordContainer.cpp</in>
          <in>PasswordContainer.h</in>
          <in>SimpleWallet.cpp</in>
          <in>SimpleWallet.h</in>
        </df>
        <df name="System">
          <in>Context.h</in>
          <in>ContextGroup.cpp</in>
          <in>ContextGroup.h</in>
          <in>ContextGroupTimeout.cpp</in>
          <in>ContextGroupTimeout.h</in>
          <in>Event.cpp</in>
          <in>Event.h</in>
          <in>EventLock.cpp</in>
          <in>EventLock.h</in>
          <in>InterruptedException.cpp</in>
          <in>InterruptedException.h</in>
          <in>Ipv4Address.cpp</in>
          <in>Ipv4Address.h</in>
          <in>OperationTimeout.h</in>
          <in>RemoteContext.h</in>
          <in>RemoteEventLock.cpp</in>
          <in>RemoteEventLock.h</in>
          <in>TcpStream.cpp</in>
          <in>TcpStream.h</in>
        </df>
        <df name="Transfers">
          <in>BlockchainSynchronizer.cpp</in>
          <in>BlockchainSynchronizer.h</in>
          <in>CommonTypes.h</in>
          <in>IBlockchainSynchronizer.h</in>
          <in>IObservableImpl.h</in>
          <in>SynchronizationState.cpp</in>
          <in>SynchronizationState.h</in>
          <in>TransfersConsumer.cpp</in>
          <in>TransfersConsumer.h</in>
          <in>TransfersContainer.cpp</in>
          <in>TransfersContainer.h</in>
          <in>TransfersSubscription.cpp</in>
          <in>TransfersSubscription.h</in>
          <in>TransfersSynchronizer.cpp</in>
          <in>TransfersSynchronizer.h</in>
          <in>TypeHelpers.h</in>
        </df>
        <df name="Wallet">
          <in>IFusionManager.h</in>
          <in>LegacyKeysImporter.cpp</in>
          <in>LegacyKeysImporter.h</in>
          <in>WalletAsyncContextCounter.cpp</in>
          <in>WalletAsyncContextCounter.h</in>
          <in>WalletErrors.cpp</in>
          <in>WalletErrors.h</in>
          <in>WalletGreen.cpp</in>
          <in>WalletGreen.h</in>
          <in>WalletIndices.h</in>
          <in>WalletRpcServer.cpp</in>
          <in>WalletRpcServer.h</in>
          <in>WalletRpcServerCommandsDefinitions.h</in>
          <in>WalletRpcServerErrorCodes.h</in>
          <in>WalletSerialization.cpp</in>
          <in>WalletSerialization.h</in>
          <in>WalletUtils.cpp</in>
          <in>WalletUtils.h</in>
        </df>
        <df name="WalletLegacy">
          <in>KeysStorage.cpp</in>
          <in>KeysStorage.h</in>
          <in>WalletHelper.cpp</in>
          <in>WalletHelper.h</in>
          <in>WalletLegacy.cpp</in>
          <in>WalletLegacy.h</in>
          <in>WalletLegacyEvent.h</in>
          <in>WalletLegacySerialization.cpp</in>
          <in>WalletLegacySerialization.h</in>
          <in>WalletLegacySerializer.cpp</in>
          <in>WalletLegacySerializer.h</in>
          <in>WalletRequest.h</in>
          <in>WalletSendTransactionContext.h</in>
          <in>WalletTransactionSender.cpp</in>
          <in>WalletTransactionSender.h</in>
          <in>WalletUnconfirmedTransactions.cpp</in>
          <in>WalletUnconfirmedTransactions.h</in>
          <in>WalletUserTransactionsCache.cpp</in>
          <in>WalletUserTransactionsCache.h</in>
          <in>WalletUtils.h</in>
        </df>
        <in>CryptoNoteConfig.h</in>
      </df>
      <df name="tests">
        <df name="CMakeFiles">
        </df>
        <df name="CoreTests">
          <in>AccountBoostSerialization.h</in>
          <in>BlockReward.cpp</in>
          <in>BlockReward.h</in>
          <in>BlockValidation.cpp</in>
          <in>BlockValidation.h</in>
          <in>BoostSerializationHelper.h</in>
          <in>ChainSplit1.cpp</in>
          <in>ChainSplit1.h</in>
          <in>ChainSwitch1.cpp</in>
          <in>ChainSwitch1.h</in>
          <in>Chaingen.cpp</in>
          <in>Chaingen.h</in>
          <in>Chaingen001.cpp</in>
          <in>Chaingen001.h</in>
          <in>ChaingenMain.cpp</in>
          <in>CryptoNoteBoostSerialization.h</in>
          <in>DoubleSpend.cpp</in>
          <in>DoubleSpend.h</in>
          <in>IntegerOverflow.cpp</in>
          <in>IntegerOverflow.h</in>
          <in>RandomOuts.cpp</in>
          <in>RandomOuts.h</in>
          <in>RingSignature.cpp</in>
          <in>RingSignature.h</in>
          <in>TestGenerator.h</in>
          <in>TransactionBuilder.cpp</in>
          <in>TransactionBuilder.h</in>
          <in>TransactionTests.cpp</in>
          <in>TransactionTests.h</in>
          <in>TransactionValidation.cpp</in>
          <in>TransactionValidation.h</in>
          <in>UnorderedContainersBoostSerialization.h</in>
          <in>double_spend.inl</in>
        </df>
        <df name="crypto">
          <in>crypto-ops-data.c</in>
          <in>crypto-ops.c</in>
          <in>crypto-tests.h</in>
          <in>crypto.cpp</in>
          <in>hash.c</in>
          <in>main.cpp</in>
          <in>random.c</in>
        </df>
        <df name="Data">
        </df>
        <df name="Difficulty">
          <in>Difficulty.cpp</in>
        </df>
        <df name="Hash">
          <in>main.cpp</in>
        </df>
        <df name="IntegrationTestLib">
          <in>BaseFunctionalTests.cpp</in>
          <in>BaseFunctionalTests.h</in>
          <in>InProcTestNode.cpp</in>
          <in>InProcTestNode.h</in>
          <in>Logger.cpp</in>
          <in>Logger.h</in>
          <in>NetworkConfiguration.h</in>
          <in>NodeCallback.h</in>
          <in>NodeObserver.h</in>
          <in>ObservableValue.h</in>
          <in>Process.cpp</in>
          <in>Process.h</in>
          <in>RPCTestNode.cpp</in>
          <in>RPCTestNode.h</in>
          <in>TestNetwork.cpp</in>
          <in>TestNetwork.h</in>
          <in>TestNode.h</in>
          <in>TestWalletLegacy.cpp</in>
          <in>TestWalletLegacy.h</in>
        </df>
        <df name="IntegrationTests">
          <in>BaseTests.h</in>
          <in>IntegrationTests.cpp</in>
          <in>MultiVersion.cpp</in>
          <in>Node.cpp</in>
          <in>WalletLegacyObserver.h</in>
          <in>WalletLegacyTests.cpp</in>
          <in>main.cpp</in>
        </df>
        <df name="NodeRpcProxyTests">
          <in>NodeRpcProxyTests.cpp</in>
        </df>
        <df name="PerformanceTests">
          <in>CheckRingSignature.h</in>
          <in>ConstructTransaction.h</in>
          <in>CryptoNoteSlowHash.h</in>
          <in>DerivePublicKey.h</in>
          <in>DeriveSecretKey.h</in>
          <in>GenerateKeyDerivation.h</in>
          <in>GenerateKeyImage.h</in>
          <in>GenerateKeyImageHelper.h</in>
          <in>IsOutToAccount.h</in>
          <in>MultiTransactionTestBase.h</in>
          <in>PerformanceTests.h</in>
          <in>PerformanceUtils.h</in>
          <in>SingleTransactionTestBase.h</in>
          <in>main.cpp</in>
        </df>
        <df name="System">
          <in>ContextGroupTests.cpp</in>
          <in>ContextGroupTimeoutTests.cpp</in>
          <in>ContextTests.cpp</in>
          <in>DispatcherTests.cpp</in>
          <in>ErrorMessageTests.cpp</in>
          <in>EventLockTests.cpp</in>
          <in>EventTests.cpp</in>
          <in>Ipv4AddressTests.cpp</in>
          <in>Ipv4ResolverTests.cpp</in>
          <in>OperationTimeoutTests.cpp</in>
          <in>RemoteContextTests.cpp</in>
          <in>TcpConnectionTests.cpp</in>
          <in>TcpConnectorTests.cpp</in>
          <in>TcpListenerTests.cpp</in>
          <in>TimerTests.cpp</in>
          <in>main.cpp</in>
        </df>
        <df name="TestGenerator">
          <in>TestGenerator.cpp</in>
          <in>TestGenerator.h</in>
        </df>
        <df name="TransfersTests">
          <in>Globals.h</in>
          <in>TestNodeRpcProxy.cpp</in>
          <in>TestTxPoolSync.cpp</in>
          <in>Tests.cpp</in>
          <in>main.cpp</in>
        </df>
        <df name="UnitTests">
          <in>ArrayRefTests.cpp</in>
          <in>ArrayViewTests.cpp</in>
          <in>Base58.cpp</in>
          <in>BlockReward.cpp</in>
          <in>BlockingQueue.cpp</in>
          <in>Chacha8.cpp</in>
          <in>Checkpoints.cpp</in>
          <in>DecomposeAmountIntoDigits.cpp</in>
          <in>EventWaiter.cpp</in>
          <in>EventWaiter.h</in>
          <in>ICoreStub.cpp</in>
          <in>ICoreStub.h</in>
          <in>ICryptoNoteProtocolQueryStub.cpp</in>
          <in>ICryptoNoteProtocolQueryStub.h</in>
          <in>INodeStubs.cpp</in>
          <in>INodeStubs.h</in>
          <in>MulDiv.cpp</in>
          <in>ParseAmount.cpp</in>
          <in>PaymentGateTests.cpp</in>
          <in>Serialization.cpp</in>
          <in>SerializationKV.cpp</in>
          <in>Shuffle.cpp</in>
          <in>StringBufferTests.cpp</in>
          <in>StringViewTests.cpp</in>
          <in>TestBcS.cpp</in>
          <in>TestBlockchainExplorer.cpp</in>
          <in>TestBlockchainGenerator.cpp</in>
          <in>TestBlockchainGenerator.h</in>
          <in>TestCurrency.cpp</in>
          <in>TestFormatUtils.cpp</in>
          <in>TestInprocessNode.cpp</in>
          <in>TestJsonValue.cpp</in>
          <in>TestMessageQueue.cpp</in>
          <in>TestPath.cpp</in>
          <in>TestPeerlist.cpp</in>
          <in>TestProtocolPack.cpp</in>
          <in>TestTransactionPoolDetach.cpp</in>
          <in>TestTransfers.cpp</in>
          <in>TestTransfersConsumer.cpp</in>
          <in>TestTransfersContainer.cpp</in>
          <in>TestTransfersContainerKeyImage.cpp</in>
          <in>TestTransfersSubscription.cpp</in>
          <in>TestWallet.cpp</in>
          <in>TestWalletLegacy.cpp</in>
          <in>TestWalletService.cpp</in>
          <in>TransactionApi.cpp</in>
          <in>TransactionApiHelpers.cpp</in>
          <in>TransactionApiHelpers.h</in>
          <in>TransactionPool.cpp</in>
          <in>TransfersObserver.h</in>
          <in>UnitTestsUtils.h</in>
          <in>main.cpp</in>
        </df>
        <in>HashTarget.cpp</in>
        <in>Io.h</in>
      </df>
      <df name="version">
        <in>version.h</in>
      </df>
      <in>miniupnpcstrings.h</in>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
